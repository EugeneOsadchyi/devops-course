apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Chart.Name }}-1
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}-{{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}-{{ .Chart.Name }}-1
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name }}-{{ .Chart.Name }}-1
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Release.Name }}-{{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}-{{ .Chart.Name }}-1
    spec:
      containers:
      - name: {{ .Release.Name }}-{{ .Chart.Name }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: Always
        resources:
          limits:
            {{ with .Values.resourceLimits -}}
            memory: {{.memory}}
            cpu: {{.cpu}}
            {{- end }}
        ports:
        - containerPort: 80
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-{{ .Chart.Name }}-env
        env:
        - name: DATABASE_HOSTNAME
          valueFrom:
            configMapKeyRef:
              name: db-credentials
              key: hostname
        - name: DATABASE_USERNAME
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: username
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Chart.Name }}-2
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}-{{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}-{{ .Chart.Name }}-2
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name }}-{{ .Chart.Name }}-2
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Release.Name }}-{{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}-{{ .Chart.Name }}-2
    spec:
      containers:
      - name: {{ .Release.Name }}-{{ .Chart.Name }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: Always
        resources:
          limits:
            {{ with .Values.resourceLimits -}}
            memory: {{.memory}}
            cpu: {{.cpu}}
            {{- end }}
        ports:
        - containerPort: 80
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-{{ .Chart.Name }}-env
        env:
        - name: DATABASE_HOSTNAME
          valueFrom:
            configMapKeyRef:
              name: db-credentials
              key: hostname
        - name: DATABASE_USERNAME
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: username
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Chart.Name }}-3
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}-{{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}-{{ .Chart.Name }}-3
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name }}-{{ .Chart.Name }}-3
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Release.Name }}-{{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}-{{ .Chart.Name }}-3
    spec:
      containers:
      - name: {{ .Release.Name }}-{{ .Chart.Name }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: Always
        resources:
          limits:
            {{ with .Values.resourceLimits -}}
            memory: {{.memory}}
            cpu: {{.cpu}}
            {{- end }}
        ports:
        - containerPort: 80
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-{{ .Chart.Name }}-env
        env:
        - name: DATABASE_HOSTNAME
          valueFrom:
            configMapKeyRef:
              name: db-credentials
              key: hostname
        - name: DATABASE_USERNAME
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: username
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Chart.Name }}-4
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}-{{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}-{{ .Chart.Name }}-4
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name }}-{{ .Chart.Name }}-4
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Release.Name }}-{{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}-{{ .Chart.Name }}-4
    spec:
      containers:
      - name: {{ .Release.Name }}-{{ .Chart.Name }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: Always
        resources:
          limits:
            {{ with .Values.resourceLimits -}}
            memory: {{.memory}}
            cpu: {{.cpu}}
            {{- end }}
        ports:
        - containerPort: 80
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-{{ .Chart.Name }}-env
        env:
        - name: DATABASE_HOSTNAME
          valueFrom:
            configMapKeyRef:
              name: db-credentials
              key: hostname
        - name: DATABASE_USERNAME
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: username
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
